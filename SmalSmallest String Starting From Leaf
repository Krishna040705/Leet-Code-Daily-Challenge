void dfs(struct TreeNode* node, char* path, char** smallest) {
    if (node == NULL)
        return;

    int len = strlen(path);
    path[len] = (char)('a' + node->val);

    if (node->left == NULL && node->right == NULL) {
        path[len + 1] = '\0';
        int path_len = strlen(path);
        char* reversed_path = (char*)malloc((path_len + 1) * sizeof(char));
        for (int i = 0; i < path_len; i++) {
            reversed_path[i] = path[path_len - 1 - i];
        }
        reversed_path[path_len] = '\0';
        if (*smallest == NULL || strcmp(reversed_path, *smallest) < 0) {
            free(*smallest);
            *smallest = strdup(reversed_path);
        }
        free(reversed_path);
    } else {
        dfs(node->left, path, smallest);
        dfs(node->right, path, smallest);
    }

    path[len] = '\0';
}

char* smallestFromLeaf(struct TreeNode* root) {
    if (root == NULL)
        return NULL;

    char* smallest = NULL;
    char path[1000];
    memset(path, '\0', sizeof(path));

    dfs(root, path, &smallest);

    return smallest;
}
