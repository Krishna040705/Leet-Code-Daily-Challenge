//Code by Keerti Krishna Sreenivas S
class Solution {
    public ListNode[] splitListToParts(ListNode head, int k) {
        ListNode[] ans = new ListNode[k];
        ListNode curr = head;
        int size = 0;

        ListNode t = head;
        while (t != null) {
            size++;
            t = t.next;
        }

        for (int i = 0; i < k; i++) {
            ans[i] = curr;
            if (k > size) {
                if (curr != null) {
                    ListNode next = curr.next;
                    curr.next = null;
                    curr = next;
                } else {
                    curr = null;
                }
            } else {
                // Calculate the size of each part
                int partSize = size / k;
                if (i < size % k) {

                // Move to the end of the current part
                for (int j = 0; j < partSize - 1; j++) {
                    if (curr != null) {
                        curr = curr.next;
                    }
                }

                // Separate the current part from the next part
                if (curr != null) {
                    ListNode next = curr.next;
                    curr.next = null;
                    curr = next;
                }
            }
        }

        return ans;
    }
}
